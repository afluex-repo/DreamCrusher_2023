@model DreamCrusher.Models.Setting

@{
    ViewBag.Title = "ChangePassword";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}


@using (Html.BeginForm("ChangeAdminPassword", "Setting", FormMethod.Post, new { @id = "form1", @autocomplete="off"}))
    
{
    <div class="page-content">
        <div class="row">
            <div class="col-12 col-lg-12 col-xl-12">
                <div class="card">
                    <div class="card-body">
                        <div class="d-flex align-items-center justify-content-between">
                            <h5 class="mb-0">Change Password</h5>
                        </div>
                        <p style="color:lightgreen;display: block; margin-bottom:0px; text-align:center">
                            @TempData["ChangeAsspassword"]
                        </p>
                        <p style="color: red;display: block; margin-bottom:0px; text-align:center">
                            @TempData["ErrChangeAsspassword"]
                        </p>
                    </div>
                </div>
            </div>
            <div class="col-12 col-lg-12 col-xl-12">
                <div class="card mt-2">
                    <div class="card-body">
                        <div class="row g-3">

                            @*<div class="col-md-4">
                                <div class="form-group">
                                    Login Id <span style="color: red">*</span>
                                    @Html.TextBoxFor(m => m.LoginId, new { @class = "form-control", @Placeholder = "Login Id", @onchange = "getmembername(this);" })
                                    @Html.ValidationMessageFor(m => m.LoginId)
                                </div>
                            </div>*@
       
                            <div class="col-md-3">
                                <label class="form-label">Old Password<span style="color:red;">*</span></label>
                                @Html.PasswordFor(m => m.Password, new { @class = "form-control", @Placeholder = "Old Password" })
                            </div>
                            <div class="col-md-3">
                                <label class="form-label">New Password<span style="color:red;">*</span></label>
                               @Html.PasswordFor(m => m.NewPassword, new { @class = "form-control", @Placeholder = "New Password" })
                            </div>


                            <div class="col-md-3">
                                <label class="form-label">Confirm Password<span style="color:red;">*</span></label>
                                @Html.PasswordFor(m => m.ConfirmNewPassword, new { @class = "form-control", @Placeholder = "Confirm Password", @onchange = "return Check();" })
                            </div>
                           
                            <div class="col-md-3">
                                <br />
                                <input class="btn btn-success pull-right" onclick="return validateform()" type="submit" value="Change Password" />
                            </div>
                        </div>
                    </div>
                </div>
            </div>
           
        </div>
    </div>
}



<script>

    function Check() {
        debugger
        if ($('#ConfirmNewPassword').val() != $('#NewPassword').val()) {

            alert("Confirm Password and new password should be same .")
            $('#ConfirmNewPassword').val('')
            $('#NewPassword').val('')
        }
    }



    function validateform() {
        $(".errortext").removeClass("errortext");
        if ($('#Password').val() == '') {
            $("#Password").addClass('errortext');
            $('#Password').focus();
            return false;
        }
        if ($('#NewPassword').val() == '') {
            $("#NewPassword").addClass('errortext');
            $('#NewPassword').focus();
            return false;
        }
        if ($('#ConfirmNewPassword').val() == '') {
            $("#ConfirmNewPassword").addClass('errortext');
            $('#ConfirmNewPassword').focus();
            return false;
        }
        return true;
    }

    function getmembername() {
        debugger;
        var LoginId = $('#LoginId').val();
        $.ajax({
            url: '/Setting/GetMemberName',
            type: "GET",
            dataType: "JSON",
            data: { LoginId: LoginId },
            success: function (data) {
                debugger;
                if (data.Result == "Yes") {
                    $('#txtname').html(data.DisplayName);

                    divname.style.display = "block";
                } else {
                    alert("Invalid Sponser Id");
                    $('#txtname').html("");
                    $('#LoginId').val("");

                }
            }
        });
    }
</script>
<style>
    .errortext {
        border: 1px solid red !important;
        /*background-color: #fff0f0 !important;*/
    }
    .btn-success{
        margin-top:8px;
    }
</style>
